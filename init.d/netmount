#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# Since NFS is so common and it's possible to mount it without needing
# any additional daemon overhead, we'll account for it here.

depend() {
	# We list so many filesystems here so that people can do "use netmount"
	# in their init.d scripts and not worry about random net filesystem scripts.
	local myneed="" myuse=""
	local pmap=$([[ -x /etc/init.d/rpcbind ]] && echo "rpcbind" || echo "portmap")
	local nfs_mounts=$(awk '!/^[[:space:]]*#/ && ($3=="nfs" || $3=="nfs4") && $4 !~ /\<(noauto|nolock)\>/ { print $0 }' /etc/fstab)
	if [[ -n ${nfs_mounts} ]] ; then
		myneed="${myneed} ${pmap}"
	else
		myuse="${myuse} ${pmap}"
	fi
	need net ${myneed}
	use afs-client amd autofs nfs nfsmount ${myuse}
}

remove_net_fs() {
	local fs
	rcfilesystems=" ${rcfilesystems} "
	for fs in "$@" ; do
		rcfilesystems=${rcfilesystems// ${fs} / }
	done
	rcfilesystems=${rcfilesystems# } # remove front and
	rcfilesystems=${rcfilesystems% } #   back spaces
}

start() {
	local rcfilesystems=${NET_FS_LIST}

	# If the nfsmount script took care of the nfs filesystems,
	# then there's no point in trying them twice
	if service_started nfsmount ; then
		remove_net_fs nfs nfs4
	else
		# Only try to mount NFS filesystems if portmap was started.
		# This is to fix "hang" problems for new users who do not
		# add portmap to the default runlevel.
		local nfs_mounts=$(awk '!/^[[:space:]]*#/ && ($3=="nfs" || $3=="nfs4") && $4 !~ /\<(noauto|nolock)\>/ { print $0 }' /etc/fstab)
		if ! service_started portmap && [[ -n ${nfs_mounts} ]] ; then
			remove_net_fs nfs nfs4
		fi
	fi

	rcfilesystems=${rcfilesystems// /,}   # convert to comma-separated

	ebegin $"Mounting network filesystems"
	mount -at ${rcfilesystems}
	ewend $? $"Could not mount all network filesystems!"

	return 0
}

stop() {
	local rcfilesystems=${NET_FS_LIST}

	rcfilesystems=${rcfilesystems// /,}   # convert to comma-separated

	ebegin $"Unmounting network filesystems"
	umount -at ${rcfilesystems}
	eend $? $"Failed to simply unmount filesystems"
	[[ $? == 0 ]] && return 0

	# Nice function in rc-services.sh do handle the grunt work
	eindent
	do_unmount "umount" "" "" "^(${NET_FS_LIST// /|})$"
	eoutdent
	return ${retval}
}

# vim: set ts=4 :

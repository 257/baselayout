#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Mounts network shares according to /etc/fstab."

need_portmap() {
	local mnt opts ret IFS="
"
	set -- $(fstabinfo --fstype nfs,nfs4)
	for mnt in "$@" ; do
		case ,$(fstabinfo --options "${mnt}"), in
			*,noauto,*|*,nolock,*) ;;
			*) return 0;;
		esac
	done
	return 1
}

depend() {
	# Only have portmap as a dependency if there is a nfs mount in fstab that
	# is set to mount at boot
	local pmap=""
	if need_portmap ; then
		[ -x /etc/init.d/rpcbind ] \
			&& pmap="rpcbind" \
			|| pmap="portmap"
	fi

	config /etc/fstab
	need net ${pmap}
	use afc-client amd autofs dns nfs nfsmount portmap rpcbind
}

start() {
	local myneed= myuse= pmap="portmap" nfsmounts=
	[ -x /etc/init.d/rpcbind ] && pmap="rpcbind"

	local x= fs=
	for x in ${RC_NET_FS_LIST} ; do
		case "${x}" in
			nfs|nfs4)
    			# If the nfsmount script took care of the nfs filesystems,
	    		# then there's no point in trying them twice
				service_started nfsmount && continue

        		# Only try to mount NFS filesystems if portmap was started.
		        # This is to fix "hang" problems for new users who do not
				# add portmap to the default runlevel.
				if need_portmap && ! service_started "${pmap}" ; then
					continue
				fi
				;;
		esac
		fs="${fs}${fs:+,}${x}"
	done

	ebegin "Mounting network filesystems"
	mount -at ${fs}
	ewend $? "Could not mount all network filesystems!"
	return 0
}

stop() {
	local x= fs=
	for x in ${RC_NET_FS_LIST} ; do
		fs="${fs}${fs:+,}${x}"
	done

	ebegin "Unmounting network filesystems"
	umount -at ${fs}
	local retval=$?
	eend ${retval} "Failed to simply unmount filesystems"

	if [ ${retval} -ne 0 ] ; then
		. "${RC_LIBDIR}/sh/rc-mount.sh"
		eindent
		fs=
		for x in ${RC_NET_FS_LIST} ; do
			fs="${fs:+|}${x}"
		done
		do_unmount "umount" "" "" "^(${fs})$"
		retval=$?
		eoutdent
	fi

	return ${retval}
}

# vim: set ts=4 :

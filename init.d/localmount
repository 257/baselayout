#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

depend() {
	need checkfs
}

start() {
	# Mount local filesystems in /etc/fstab.
	ebegin $"Mounting local filesystems"
	mount -at noproc,shm${NET_FS_LIST// /,}
	eend $? $"Some local filesystem failed to mount"

	# Sync bootlog now as /var should be mounted
	bootlog sync 2>/dev/null

	# Make sure we insert usbcore if its a module
	if [[ -f /proc/modules && ! -d /proc/bus/usb ]] ; then
		# >/dev/null to hide errors from non-USB users
		modprobe usbcore &> /dev/null
	fi

	if [[ -e /proc/filessystems ]] ; then
		# Check what USB fs the kernel support.  Currently
		# 2.5+ kernels, and later 2.4 kernels have 'usbfs',
		# while older kernels have 'usbdevfs'.
		local usbfs=$(grep -Fow usbfs /proc/filesystems ||
			grep -Fow usbdevfs /proc/filesystems)

		if [[ -n ${usbfs} ]] && \
		   [[ -e /proc/bus/usb && ! -e /proc/bus/usb/devices ]] ; then
			ebegin $"Mounting USB device filesystem" "(${usbfs})"
			usbgid=$(echo $(getent group usb) | awk -F: '{print $3}')
			mount -t ${usbfs} usbfs /proc/bus/usb \
				-o ${usbgid:+devmode=0664,devgid=${usbgid},}noexec,nosuid
			eend $? $"Failed to mount USB device filesystem"
		fi

		# Setup Kernel Support for miscellaneous Binary Formats
		local binfmt=$(grep -Fow binfmt_misc /proc/filesystems)
		if [[ -n ${binfmt} && -e /proc/sys/fs/binfmt_misc ]] ; then
			ebegin $"Mounting misc binary format filesystem"
			mount -t binfmt_misc binfmt_misc \
				/proc/sys/fs/binfmt_misc \
				-o nodev,noexec,nosuid
			eend $?
		fi
	fi

	# We do our swapping here instead of rc so we can get urandom started
	# before us for people that like an encrypted swap.
	ebegin $"Activating (possible) swap"
	swapon -a >/dev/null
	eend 0 # If swapon has nothing todo it errors, so always return 0 

	# Start dm-crypt mappings, if any
	start_addon dm-crypt

	# Always return 0 - some local mounts may not be critical for boot
	return 0
}

# vim: set ts=4 :

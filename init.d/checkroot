#!/sbin/runscript
# Copyright 1999-2003 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License v2
# $Header$


depend() {
	before *
}

start() {
	if [ ! -f /fastboot ]
	then
		ebegin "Remounting root filesystem read-only (if necessary)"
		mount / -n -o remount,ro &>/dev/null
		eend $?

		ebegin "Checking root filesystem"
		if [ -f /forcefsck ]
		then
			ewarn "A full fsck has been forced"
			fsck -C -f -a /
			# /forcefsck isn't deleted because checkfs needs it.
			# it'll be deleted in that script.
		else
			fsck -C -a /
		fi
		if [ "$?" -eq 0 ]
		then
			eend 0
		elif [ "$?" -eq 1 ]
		then
			ewend 1 "Filesystem repaired"
		else
			eend 2 "Filesystem couldn't be fixed :("
			/sbin/sulogin ${CONSOLE}
			einfo "Unmounting filesystems"
			/bin/mount -a -o remount,ro & >/dev/null
			einfo "Rebooting"
			/sbin/reboot -f
		fi
	fi

	ebegin "Remounting root filesystem read/write"
	mount / -n -o remount,rw &>/dev/null
	if [ "$?" -ne 0 ]
	then
		eend 2 "Root filesystem could not be mounted R/W :("
		/sbin/sulogin ${CONSOLE}
	else
		eend 0
	fi

	if [ "${BOOT}" = "yes" ]
	then
		# Create /etc/mtab (done by forcing current mounted filesystems)
		cp -f /proc/mounts /etc/mtab
		# NB:  this needs to be updated if our /sbin/rc mounts change ...
#		> /etc/mtab
#		mount -f -o rw / &> /dev/null
#		mount -f /proc &> /dev/null

		# Remove stale backups
		rm -f /etc/mtab~ /etc/mtab~~
		
		# Should /dev be mounted ?
#		if ! get_bootparam "nodevfs" && [ -e /dev/.devfsd ]
#		then
#			mount -f -t devfs none /dev &> /dev/null
#		fi
		
		# Should we mount a ramdisk or tmpfs?
#		if get_bootparam "tmpfs" || \
#		   [ "${svcmount}" = "yes" -a "${svcfstype}" = "tmpfs" ]
#		then
			# Using tmpfs ...
#			mount -f -t tmpfs tmpfs "${svcdir}" \
#				-o rw,mode=0644,size="${svcsize}"k &> /dev/null
			
#		elif get_bootparam "ramfs" || \
#		     [ "${svcmount}" = "yes" -a "${svcfstype}" = "ramfs" ]
#		then
			# Using a ramdisk ...
#			mount -f -t ext2 /dev/ram0 "${svcdir}" -o rw &> /dev/null
#		fi
	fi
}


# vim:ts=4

#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Check filesystems according to /etc/fstab for errors and \
optionally repair them."

depend() {
	need checkroot
	after modules
}

do_checkfs() {
	local retval=0 mode="-p" opts= parts=

	ebegin "Checking all filesystems"
	
	if  [ -e /forcefsck ] || get_bootparam "forcefsck" ; then
		ewarn "A full fsck has been forced"
		mode="-f -n"
	fi

	if [ "${RC_UNAME}" = "Linux" ] ; then
		opts="-A -C0 -R -T"
	else
		parts="$(fstabinfo --passno ">1")"
		[ -z "${parts}" ] && return 0
	fi

	fsck ${opts} ${mode} ${parts}
	retval=$?
	
	if [ ${retval} -eq 0 ] ; then
		eend 0
	elif [ ${retval} -eq 1 ] ; then
		ewend 1 "Filesystem errors corrected."
		retval=0
	elif [ ${retval} -eq 2 ] ; then
		ewend 1 "System should be rebooted"
	elif [ ${retval} -eq 8 ] ; then
		ewend 1 "Operational error, continuing"
		retval=0
	else
		if [ "${RC_FORCE_AUTO}" = "yes" ] ; then
			eend 2 "Fsck could not correct all errors, rerunning"
			fsck ${opts} -y ${parts}
			retval=$?
			eend ${retval}
		fi

		if [ ${retval} -gt 3 ] ; then
			eend 2 "Fsck could not correct all errors, manual repair needed"
			exec rc-abort || exit 1
		fi
	fi

	[ ${retval} = 0 -a -e /forcefsck ] && rm /forcefsck

	return ${retval}
}

start() {
	do_checkfs
}

stop() {
	# fsck on shutdown if we need to
	[ "${FSCK_SHUTDOWN}" = "yes" -a ! -f /forcefsck ] && do_checkfs
	return 0
}

# vim: set ts=4 :

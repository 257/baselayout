#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

depend() {
	use hostname
	need localmount
	before logger
	after clock sysctl
}

start() {
	[[ ${BOOT} != "yes" ]] && return 0

	if [[ $(uname) == "Linux" ]] ; then
		# Put a nologin file in /etc to prevent people from logging
		# in before system startup is complete.
		if [[ ${DELAYLOGIN} == "yes" ]] ; then
			echo $"System bootup in progress - please wait" \
				> /etc/nologin
			cp /etc/nologin /etc/nologin.boot &> /dev/null
		fi

		# BSD has it's own sysctl init script
		if [[ -e /etc/sysctl.conf ]] ; then
			ebegin $"Configuring kernel parameters"
			sysctl -q -p /etc/sysctl.conf
			eend $?
		fi
	fi

	if [[ -z ${CDBOOT} ]] && ! touch -c /var/run 2> /dev/null ; then
		ewarn $"Skipping /var and /tmp initialization (ro root?)"
		return 0
	fi

	if [[ $(uname) == "Linux" ]] ; then
		# Setup login records
		> /var/run/utmp
		touch /var/log/wtmp
		chgrp utmp /var/run/utmp /var/log/wtmp
		chmod 0664 /var/run/utmp /var/log/wtmp
	fi

	if [[ -x /sbin/env-update.sh ]] ; then
		ebegin $"Updating environment"
		/sbin/env-update.sh -u
		eend $?
	fi

	#
	# Take care of random stuff [ /var/lock | /var/run | pam ]
	#

	ebegin $"Cleaning" /var/lock, /var/run
	rm -rf /var/run/console.lock /var/run/console/*

	if [[ -z ${CDBOOT} ]] ; then
		#
		# Clean up any stale locks.
		#
		find /var/lock -type f -print0 | xargs -0 rm -f --
		#
		# Clean up /var/run and create /var/run/utmp so we can login.
		#
		for x in $(find /var/run/ ! -type d ! -name utmp ! -name innd.pid ! -name random-seed ! -name ld-elf.so.hints); do
			# Do not remove pidfiles of already running daemons
			if [[ ${x} == *".pid" ]] ; then
				[[ $(<"${x}") != \
				$(pidof $(basename "${x}" .pid))* ]] \
					&& continue
				[[ $(<"${x}") != \
				$(pidof $(basename "${x%%-*}" .pid))* ]] \
					&& continue
			fi
			[[ ! -f ${x} ]] && continue
			rm -f "${x}"
		done
	fi

	# Reset pam_console permissions if we are actually using it
	if [[ -x /sbin/pam_console_apply && ! -c /dev/.devfsd ]] ; then
		if [[ -n $(grep -v -e '^[[:space:]]*#' /etc/pam.d/* | grep 'pam_console') ]] ; then
			/sbin/pam_console_apply -r
		fi
	fi

	# Create the .keep to stop portage from removing /var/lock
	> /var/lock/.keep
	eend 0

	#
	# Clean up /tmp directory
	#
	if [[ -z ${CDBOOT} && -d /tmp ]] ; then
		cd /tmp
		if [[ ${WIPE_TMP} == "yes" ]] ; then
			ebegin $"Wiping /tmp directory"
			local startopts="-x . -depth"
			[[ $(uname) == "Linux" ]] && startopts=". -xdev -depth"

			# Faster than find
			rm -rf [b-ikm-pr-zA-Z]*

			find ${startopts} ! -name . \
				! -path ./lost+found \
				! -path "./lost+found/*" \
				! -path ./quota.user \
				! -path "./quota.user/*" \
				! -path ./aquota.user \
				! -path "./aquota.user/*" \
				! -path ./quota.group \
				! -path "./quota.group/*" \
				! -path ./aquota.group \
				! -path "./aquota.group/*" \
				! -path ./journal \
				! -path "./journal/*" \
				-delete
			eend 0
		else
			ebegin $"Cleaning /tmp directory"
			(
				rm -f /tmp/.X*-lock /tmp/esrv* /tmp/kio* /tmp/jpsock.* /tmp/.fam*
				rm -rf /tmp/.esd* /tmp/orbit-* /tmp/ssh-* /tmp/ksocket-* /tmp/.*-unix
			) &> /dev/null
			eend 0
		fi

		(
			# Make sure our X11 stuff have the correct permissions
			# Omit the chown as bootmisc is run before network is up
			# and users may be using lame LDAP auth #139411
			rm -rf /tmp/.{ICE,X11}-unix
			mkdir -p /tmp/.{ICE,X11}-unix
			#chown 0:0 /tmp/.{ICE,X11}-unix
			chmod 1777 /tmp/.{ICE,X11}-unix
			[[ -x /sbin/restorecon ]] && restorecon /tmp/.{ICE,X11}-unix
		) &> /dev/null
	fi

	#
	# Create an 'after-boot' dmesg log
	#
	touch /var/log/dmesg
	chmod 640 /var/log/dmesg
	dmesg > /var/log/dmesg

	#
	# Check for /etc/resolv.conf, and create if missing
	#
	[[ -f /etc/resolv.conf ]] || touch /etc/resolv.conf &> /dev/null
}

# vim: set ts=4 :

#!/bin/bash
# Copyright (c) 2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# void system_depend(void)
#
# Sets up the dependancies for the module
system_depend() {
    after interface essidnet 
    before dhcp
}

# bool system_check_installed(void)
#
# Always returns 0 as we are writing to files 
system_check_installed() {
    return 0
}

# char* system_provides(void)
#
# Returns a string to change module definition for starting up
system_provides() {
    echo "system"
}

# bool system_check_depends(void)
#
# Checks to see if we have the needed functions
system_check_depends() {
    return 0
}

# char* ifconfig_get_vars(char *interface)
#
# Returns a string spaced with possible user set configuration variables
system_get_vars() {
    echo "dns_servers_$1 dns_domain_$1 dns_search_path_$1 ntp_servers_$1 nis_domain_$1 nis_servers_$1"
}

system_dns() {
    local iface="$1" ifvar=$( bash_variable "$1" ) x
    local conffile="${statedir}/${iface}/resolv.conf" tmpfile="${conffile}.$$"
    local -a servers
    
    eval servers=( \"\$\{dns_servers_${ifvar}\[@\]\}\" )
    [[ -z ${servers} ]] && return 0

    echo "# Generated by net-scripts for interface ${iface}" > "${tmpfile}"
    chmod 644 "${tmpfile}"

    eval x=\"\$\{dns_domain_${ifvar}\}\"
    [[ -n ${x} ]] && echo "domain ${x}" >> "${tmpfile}"

    for x in ${servers[@]}; do
	echo "nameserver ${x}" >> "${tmpfile}"
    done

    eval x=\"\$\{dns_search_path_${ifvar}\}\"
    [[ -n ${x} ]] && echo "search ${x}" >> "${tmpfile}"

    mv "${tmpfile}" "${conffile}"
}

system_ntp() {
    local iface="$1" ifvar=$( bash_variable "$1" ) x
    local conffile="${statedir}/${iface}/ntp.conf" tmpfile="${conffile}.$$"
    local -a servers

    eval servers=( \"\$\{ntp_servers_${ifvar}\[\@\]\}\" )
    [[ -z ${servers} ]] && return 0

    echo "# Generated by net-scripts for interface ${iface}" > "${tmpfile}"
    chmod 644 "${tmpfile}"

    echo "restrict default noquery notrust nomodify" >> "${tmpfile}"
    echo "restrict 127.0.0.1" >> "${tmpfile}"

    for x in ${servers[@]}; do
	echo "restrict ${x} nomodify notrap noquery" >> "${tmpfile}"
	echo "server ${x}" >> "${tmpfile}"
    done

    echo "driftfile /var/lib/ntp/ntp.drift" >> "${tmpfile}"
    echo "logfile /var/log/ntp.log" >> "${tmpfile}"
   
    mv "${tmpfile}" "${conffile}"
}

system_nis() {
    local iface="$1" ifvar=$( bash_variable "$1" ) domain x
    local conffile="${statedir}/${iface}/yp.conf" tmpfile="${conffile}.$$"
    local -a servers 

    eval servers=( \"\$\{nis_servers_${ifvar}\[\@\]\}\" )
    eval domain=\"\$\{nis_domain_${ifvar}\}\"
    [[ -z ${servers} && -z ${domain} ]] && return 0

    echo "# Generated by net-scripts for interface ${iface}" > "${tmpfile}" 
    chmod 644 "${tmpfile}"

    if [[ -n ${domain} ]]; then
	/bin/hostname -y "${domain}"
	if [[ -n ${servers} ]]; then
	    for x in ${servers}; do
		echo "domain ${domain} server ${x}" >> "${tmpfile}"
	    done
	else
	    echo "domain ${domain} broadcast" >> "${tmpfile}"
	fi
    else
	for x in ${servers}; do
	    echo "ypserver ${x}" >> "${tmpfile}"
	done
    fi

    mv "${tmpfile}" "${conffile}"
}

# bool system_post_start(char *iface)
#
# Configures the host system for dns, ntp and nis information
# Always returns 0
system_post_start() {
    local iface="$1"

    system_dns "${iface}"
    system_ntp "${iface}"
    system_nis "${iface}"

    return 0
}
